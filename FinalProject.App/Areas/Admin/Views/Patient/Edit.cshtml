@model FinalProject.Core.Feature.Patient.Query.Response.GetPatientByIdResponse
@{
    ViewData["Title"] = "Edit Patient";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Edit Patient</h2>

    <form asp-action="Edit" asp-controller="Patient" asp-area="Admin" method="post" enctype="multipart/form-data" class="patient-form">
        <input type="hidden" asp-for="Id" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="row">
            <!-- Image -->
            <div class="col-md-4 form-group mb-3 text-center">
                <label asp-for="Image" class="form-label">Patient Image</label>
                <input asp-for="Image" type="file" name="file" class="form-control" accept="image/*" id="imageInput" />
                <span asp-validation-for="Image" class="text-danger"></span>
                <img id="imgPreview" src="@Model.Image" style="display: @(string.IsNullOrEmpty(Model.Image) ? "none" : "block"); max-width: 200px; margin-top: 10px;" alt="Image preview" />
            </div>

            <!-- Right Column: Other Fields -->
            <div class="col-md-8">
                <div class="row">
                    <!-- Name -->
                    <div class="col-md-6 form-group mb-3">
                        <label asp-for="Name" class="form-label">Name</label>
                        <input asp-for="Name" class="form-control" placeholder="Enter patient name" required />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <!-- Email -->
                    <div class="col-md-6 form-group mb-3">
                        <label asp-for="Email" class="form-label">Email</label>
                        <input asp-for="Email" class="form-control" type="email" placeholder="Enter email address" readonly />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>

                    <!-- Phone -->
                    <div class="col-md-6 form-group mb-3">
                        <label asp-for="Phone" class="form-label">Phone</label>
                        <input asp-for="Phone" class="form-control" placeholder="Enter phone number" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>

                    <!-- Gender -->
                    <div class="col-md-6 form-group mb-3">
                        <label asp-for="Gender" class="form-label">Gender</label>
                        <select asp-for="Gender" class="form-control" asp-items="Html.GetEnumSelectList<FinalProject.Data.Models.AppModels.Gender>()">
                            <option value="">-- Select Gender --</option>
                        </select>
                        <span asp-validation-for="Gender" class="text-danger"></span>
                    </div>

                    <!-- Date of Birth -->
                    <div class="col-md-6 form-group mb-3">
                        <label asp-for="DateOfBirth" class="form-label">Date of Birth</label>
                        <input asp-for="DateOfBirth" class="form-control" type="date" required />
                        <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                    </div>

                    <!-- Address -->
                    <div class="col-md-6 form-group mb-3">
                        <label asp-for="Address" class="form-label">Address</label>
                        <input asp-for="Address" class="form-control" placeholder="Enter address" />
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Previous Conditions Section -->
        <h3 class="mt-5">Previous Conditions</h3>
        <div id="conditions-container" class="mb-3">
            @if (Model.PreviousConditions?.Any() == true)
            {
                int conditionIndex = 0;
                @foreach (var condition in Model.PreviousConditions)
                {
                    <div class="condition-item mb-3">
                        <input type="hidden" name="PreviousConditions[@conditionIndex].Id" value="@condition.Id" />
                        <div class="row align-items-end">
                            <div class="col-md-8">
                                <label class="form-label">Condition</label>
                                <select name="PreviousConditions[@conditionIndex].Name" class="form-control">
                                    <option value="">-- Select Condition --</option>
                                    @foreach (var item in Html.GetEnumSelectList<FinalProject.Data.Models.AppModels.Name>())
                                    {
                                        <option value="@item.Value" selected="@(condition.Name.ToString() == item.Value ? "selected" : null)">@item.Text</option>
                                    }
                                </select>
                                <span asp-validation-for="PreviousConditions[conditionIndex].Name" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <button type="button" class="btn btn-danger remove-condition">Remove</button>
                            </div>
                        </div>
                    </div>
                    conditionIndex++;
                }
            }
            else
            {
                <div id="no-conditions-message" class="mt-4">No conditions available.</div>
            }
        </div>
        <button type="button" class="btn btn-secondary mt-2 add-condition">Add Another Condition</button>

        <!-- Previous Medicines Section -->
        <h3 class="mt-5">Previous Medicines</h3>
        <div id="previousMedicinesContainer" class="mb-3">
            @if (Model.PreviousMedicine?.Any() == true)
            {
                int medicineIndex = 0;
                @foreach (var medicine in Model.PreviousMedicine)
                {
                    <div class="medicine-item mb-3">
                        <input type="hidden" name="PreviousMedicine[@medicineIndex].Id" value="@medicine.Id" />
                        <div class="row align-items-end">
                            <div class="col-md-3">
                                <label class="form-label">Name</label>
                                <input name="PreviousMedicine[@medicineIndex].Name" value="@medicine.Name" class="form-control medicine-name" />
                                <span asp-validation-for="PreviousMedicine[medicineIndex].Name" class="text-danger"></span>
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Start Date</label>
                                <input type="date" name="PreviousMedicine[@medicineIndex].EndDate" value="@(medicine.EndDate != DateTime.MinValue ? String.Format("{0:yyyy-MM-dd}", medicine.EndDate) : "")" class="form-control" />                                <span asp-validation-for="PreviousMedicine[medicineIndex].StartDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">End Date</label>
                                <input type="date" name="PreviousMedicine[@medicineIndex].EndDate" value="@(medicine.EndDate.HasValue ? medicine.EndDate.Value.ToString("yyyy-MM-dd") : "")" class="form-control" />
                                <span asp-validation-for="PreviousMedicine[medicineIndex].EndDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Dose</label>
                                <input name="PreviousMedicine[@medicineIndex].Dose" value="@medicine.Dose" class="form-control" />
                                <span asp-validation-for="PreviousMedicine[medicineIndex].Dose" class="text-danger"></span>
                            </div>
                            <div class="col-md-1">
                                <button type="button" class="btn btn-danger remove-medicine">Remove</button>
                            </div>
                        </div>
                    </div>
                    medicineIndex++;
                }
            }
            else
            {
                <div id="no-medicines-message" class="mt-4">No previous medicines available.</div>
            }
        </div>
        <button type="button" class="btn btn-secondary mt-2 add-medicine">Add Another Medicine</button>

        <!-- Appointments Section -->
        <h3 class="mt-5">Appointments (Read-Only)</h3>
        @if (Model.Appointments?.Any() == true)
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var appointment in Model.Appointments)
                    {
                        <tr>
                            <td>@appointment.Date.ToString("yyyy-MM-dd")</td>
                            <td>@appointment.Status</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="mt-4">No appointments available.</div>
        }

        <!-- Action Buttons -->
        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary btn-lg">Save Changes</button>
            <a asp-action="Index" asp-controller="Patient" asp-area="Admin" class="btn btn-secondary btn-lg">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link rel="stylesheet" href="~/css/patient-create.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function () {
            let conditionIndex = @(Model.PreviousConditions?.Count ?? 0);
            let medicineIndex = @(Model.PreviousMedicine?.Count ?? 0);

            // Image preview
            $('#imageInput').on('change', function (event) {
                const imgPreview = $('#imgPreview');
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        imgPreview.attr('src', e.target.result).css('display', 'block');
                    };
                    reader.readAsDataURL(file);
                } else {
                    imgPreview.attr('src', '@Model.Image').css('display', '@(string.IsNullOrEmpty(Model.Image) ? "none" : "block")');
                }
            });

            // Autocomplete for medicine names
            function initializeAutocomplete(element) {
                $(element).autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '@Url.Action("SearchMedicines", "Interaction", new { area = "Customer" })',
                            dataType: "json",
                            data: { term: request.term },
                            success: function (data) {
                                response(data);
                            },
                            error: function () {
                                response([]);
                            }
                        });
                    },
                    minLength: 2
                });
            }

            // Apply autocomplete to existing medicine inputs
            $('.medicine-name').each(function () {
                initializeAutocomplete(this);
            });

            // Add new condition
            $('.add-condition').on('click', function () {
                $('#no-conditions-message').hide();
                const newCondition = `
                    <div class="condition-item mb-3">
                        <div class="row align-items-end">
                            <div class="col-md-8">
                                <label class="form-label">Condition</label>
                                <select name="PreviousConditions[${conditionIndex}].Name" class="form-control">
                                    <option value="">-- Select Condition --</option>
                                    @foreach (var item in Html.GetEnumSelectList<FinalProject.Data.Models.AppModels.Name>())
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <button type="button" class="btn btn-danger remove-condition">Remove</button>
                            </div>
                        </div>
                    </div>`;
                $('#conditions-container').append(newCondition);
                conditionIndex++;
            });

            // Add new medicine
            $('.add-medicine').on('click', function () {
                $('#no-medicines-message').hide();
                const newMedicine = `
                    <div class="medicine-item mb-3">
                        <div class="row align-items-end">
                            <div class="col-md-3">
                                <label class="form-label">Name</label>
                                <input name="PreviousMedicine[${medicineIndex}].Name" class="form-control medicine-name" />
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Start Date</label>
                                <input type="date" name="PreviousMedicine[${medicineIndex}].StartDate" class="form-control" />
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">End Date</label>
                                <input type="date" name="PreviousMedicine[${medicineIndex}].EndDate" class="form-control" />
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Dose</label>
                                <input name="PreviousMedicine[${medicineIndex}].Dose" class="form-control" />
                            </div>
                            <div class="col-md-1">
                                <button type="button" class="btn btn-danger remove-medicine">Remove</button>
                            </div>
                        </div>
                    </div>`;
                $('#previousMedicinesContainer').append(newMedicine);
                initializeAutocomplete($(`input[name="PreviousMedicine[${medicineIndex}].Name"]`));
                medicineIndex++;
            });

            // Remove condition
            $(document).on('click', '.remove-condition', function () {
                $(this).closest('.condition-item').remove();
                if ($('#conditions-container .condition-item').length === 0) {
                    $('#no-conditions-message').show();
                }
            });

            // Remove medicine
            $(document).on('click', '.remove-medicine', function () {
                $(this).closest('.medicine-item').remove();
                if ($('#previousMedicinesContainer .medicine-item').length === 0) {
                    $('#no-medicines-message').show();
                }
            });
        });
    </script>
}