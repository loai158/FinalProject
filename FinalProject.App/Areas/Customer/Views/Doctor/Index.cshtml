@model IEnumerable<FinalProject.Core.Feature.Doctor.Query.Response.GetAllDoctorsResponse>

@{
    ViewData["Title"] = "قائمة الأطباء";
}

<style>
    .doctor-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .doctor-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .schedule-table th {
        background-color: #f8f9fa;
    }

    .badge-success {
        background-color: #28a745;
    }

    .badge-danger {
        background-color: #dc3545;
    }
</style>

<h1 class="text-center mb-5 fw-bold text-primary">قائمة الأطباء</h1>

<div class="container">
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @if (Model != null && Model.Any())
        {
            foreach (var doctor in Model)
            {
                <div class="col">
                    <div class="card h-100 border-0 doctor-card shadow-sm">
                        <div class="card-body text-center p-4">
                            <!-- صورة الطبيب -->
                            @if (!string.IsNullOrEmpty(doctor.Image))
                            {
                                <img src="~/image/@doctor.Image" class="rounded-circle mb-3 img-thumbnail" alt="صورة الطبيب" width="100" height="100" />
                            }
                            else
                            {
                                <div class="mb-3 text-muted">لا يوجد صورة</div>
                            }

                            <!-- اسم الطبيب -->
                            <h5 class="card-title mb-3">@doctor.Name</h5>

                            <!-- تفاصيل الطبيب -->
                            <p class="card-text mb-1"><i class="bi bi-briefcase text-primary"></i> <strong>التخصص:</strong> @doctor.Department</p>
                            <p class="card-text mb-1"><i class="bi bi-telephone text-primary"></i> <strong>الهاتف:</strong> @doctor.Phone</p>
                            <p class="card-text mb-1"><i class="bi bi-envelope text-primary"></i> <strong>البريد:</strong> @doctor.Email</p>
                            <p class="card-text mb-3"><i class="bi bi-gender-ambiguous text-primary"></i> <strong>الجنس:</strong> @(doctor.Gender == FinalProject.Data.Models.AppModels.Gender.Male ? "ذكر" : "أنثى")</p>

                            <!-- مواعيد الطبيب -->
                            <div class="mt-3">
                                <h6 class="fw-bold text-secondary">مواعيد العمل</h6>
                                @if (doctor.DoctorSchedules != null && doctor.DoctorSchedules.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-sm schedule-table align-middle mb-0">
                                            <thead>
                                                <tr>
                                                    <th>التاريخ</th>
                                                    <th>من</th>
                                                    <th>إلى</th>
                                                    <th>الحالة</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var schedule in doctor.DoctorSchedules)
                                                {
                                                    <tr>
                                                        <td>@schedule.Day.ToString("yyyy/MM/dd")</td>
                                                        <td>@schedule.StartTime.ToString("HH:mm")</td>
                                                        <td>@schedule.EndTime.ToString("HH:mm")</td>
                                                        <td>
                                                            @if (schedule.IsAvailable)
                                                            {
                                                                <span class="badge bg-success">متاح</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="badge bg-danger">محجوز</span>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <small class="text-muted">لا توجد مواعيد متاحة</small>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center">
                <div class="alert alert-info mb-0">لا يوجد أطباء مسجلين حالياً.</div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                toastr.success(successMessage, 'تم بنجاح', { timeOut: 4000 });
            }

            var errorMessage = '@TempData["ErrorMessage"]';
            if (errorMessage) {
                toastr.error(errorMessage, 'حدث خطأ', { timeOut: 4000 });
            }
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>

    <script>
        // تفعيل AOS (Animation On Scroll)
        AOS.init({
            duration: 800,
            once: true
        });

        // تبديل السمة
        const toggleBtn = document.getElementById("themeToggle");
        const body = document.body;

        toggleBtn.addEventListener("click", () => {
            if (body.classList.contains("light-mode")) {
                body.classList.remove("light-mode");
                body.classList.add("dark-mode");
                toggleBtn.innerHTML = '<i class="bi bi-sun"></i> <span>الوضع النهاري</span>';
            } else {
                body.classList.remove("dark-mode");
                body.classList.add("light-mode");
                toggleBtn.innerHTML = '<i class="bi bi-moon"></i> <span>الوضع الليلي</span>';
            }
        });

        // تحديد السمة الافتراضية
        window.onload = () => {
            const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            if (prefersDark) {
                body.classList.add('dark-mode');
                toggleBtn.innerHTML = '<i class="bi bi-sun"></i> <span>الوضع النهاري</span>';
            } else {
                body.classList.add('light-mode');
            }
        };
    </script>
}